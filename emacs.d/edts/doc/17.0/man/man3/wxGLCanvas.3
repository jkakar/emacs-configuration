.TH wxGLCanvas 3 "wx 1.2" "" "Erlang Module Definition"
.SH NAME
wxGLCanvas \- See external documentation: wxGLCanvas.
.SH DESCRIPTION
.LP
See external documentation: wxGLCanvas\&.
.LP
This class is derived (and can use functions) from: 
.br
\fBwxWindow\fR\& 
.br
\fBwxEvtHandler\fR\& 
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIwxGLCanvas()\fR\&:

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new(Parent) -> wxGLCanvas()
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow() (see module wxWindow)
.br
.RE
.RE
.RS
.LP
Equivalent to \fBnew(Parent, [])\fR\&\&.
.RE
.LP
.B
new(Parent, Shared) -> wxGLCanvas()
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow() (see module wxWindow)
.br
Shared = wx_object() (see module wx) | wxGLCanvas()
.br
.RE
.RE
.RS
.LP
See external documentation\&. 
.br
Also:
.br
new(Parent, [Option]) -> wxGLCanvas() when
.br
Parent::wxWindow:wxWindow(),
.br
Option :: {id, integer()}
.br
| {pos, {X::integer(), Y::integer()}}
.br
| {size, {W::integer(), H::integer()}}
.br
| {style, integer()}
.br
| {name, unicode:chardata()}
.br
| {attribList, [integer()]}
.br
| {palette, wxPalette:wxPalette()}\&.
.br

.RE
.LP
.B
new(Parent, Shared, Option::[Option]) -> wxGLCanvas()
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow() (see module wxWindow)
.br
Shared = wx_object() (see module wx) | wxGLCanvas()
.br
Option = {id, integer()} | {pos, {X::integer(), Y::integer()}} | {size, {W::integer(), H::integer()}} | {style, integer()} | {name, chardata() (see module unicode)} | {attribList, [integer()]} | {palette, wxPalette() (see module wxPalette)}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getContext(This) -> wx_object() (see module wx)
.br
.RS
.LP
Types:

.RS 3
This = wxGLCanvas()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setCurrent(This) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxGLCanvas()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
swapBuffers(This) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxGLCanvas()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
destroy(This::wxGLCanvas()) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>