.TH CosNotifyChannelAdmin_ProxyPushConsumer 3 "cosNotification 1.1.21" "Ericsson AB" "Erlang Module Definition"
.SH NAME
CosNotifyChannelAdmin_ProxyPushConsumer \- This module implements the OMG  CosNotifyChannelAdmin::ProxyPushConsumer interface.
.SH DESCRIPTION
.LP
To get access to the record definitions for the structures use: 
.br
\fI-include_lib("cosNotification/include/*\&.hrl")\&.\fR\&
.LP
This module also exports the functions described in:
.RS 2
.TP 2
*
\fBCosNotifyComm_NotifyPublish\fR\&
.LP
.TP 2
*
\fBCosNotification_QoSAdmin\fR\&
.LP
.TP 2
*
\fBCosNotifyFilter_FilterAdmin\fR\&
.LP
.TP 2
*
\fBCosNotifyChannelAdmin_ProxyConsumer\fR\&
.LP
.RE

.SH EXPORTS
.LP
.B
connect_any_push_supplier(ProxyPushConsumer, PushSupplier) -> Reply
.br
.RS
.LP
Types:

.RS 3
ProxyPushConsumer = #objref
.br
PushSupplier = #objref
.br
Reply = ok | {\&'EXCEPTION\&', #\&'CosEventChannelAdmin_AlreadyConnected\&'{}}
.br
.RE
.RE
.RS
.LP
This operation connects a \fIPushSupplier\fR\& to the target object\&. If a connection already exists the \fIAlreadyConnected\fR\& exception is raised\&.
.RE
.LP
.B
push(ProxyPushConsumer, Event) -> Reply
.br
.RS
.LP
Types:

.RS 3
ProxyPushConsumer = #objref
.br
Event = #any
.br
Reply = ok | {\&'EXCEPTION\&', #\&'CosEventChannelAdmin_Disconnected\&'{}}
.br
.RE
.RE
.RS
.LP
This operation pushes an \fI#any{}\fR\& event to the target object\&. If no client have been connected the \fIDisconnected\fR\& exception is raised\&.
.RE
.LP
.B
disconnect_push_consumer(ProxyPushConsumer) -> ok
.br
.RS
.LP
Types:

.RS 3
ProxyPushConsumer = #objref
.br
.RE
.RE
.RS
.LP
Invoking this operation will cause the target object to close the connection and terminate\&.
.RE