.TH wxAuiNotebook 3 "wx 1.2" "" "Erlang Module Definition"
.SH NAME
wxAuiNotebook \- See external documentation: wxAuiNotebook.
.SH DESCRIPTION
.LP
See external documentation: wxAuiNotebook\&.
.LP
This class is derived (and can use functions) from: 
.br
\fBwxControl\fR\& 
.br
\fBwxWindow\fR\& 
.br
\fBwxEvtHandler\fR\& 
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIwxAuiNotebook()\fR\&:

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new() -> wxAuiNotebook()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
new(Parent) -> wxAuiNotebook()
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow() (see module wxWindow)
.br
.RE
.RE
.RS
.LP
Equivalent to \fBnew(Parent, [])\fR\&\&.
.RE
.LP
.B
new(Parent, Option::[Option]) -> wxAuiNotebook()
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow() (see module wxWindow)
.br
Option = {id, integer()} | {pos, {X::integer(), Y::integer()}} | {size, {W::integer(), H::integer()}} | {style, integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
addPage(This, Page, Caption) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
Page = wxWindow() (see module wxWindow)
.br
Caption = chardata() (see module unicode)
.br
.RE
.RE
.RS
.LP
Equivalent to \fBaddPage(This, Page, Caption, [])\fR\&\&.
.RE
.LP
.B
addPage(This, Page, Caption, Option::[Option]) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
Page = wxWindow() (see module wxWindow)
.br
Caption = chardata() (see module unicode)
.br
Option = {select, boolean()} | {bitmap, wxBitmap() (see module wxBitmap)}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
create(This, Parent) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
Parent = wxWindow() (see module wxWindow)
.br
.RE
.RE
.RS
.LP
Equivalent to \fBcreate(This, Parent, [])\fR\&\&.
.RE
.LP
.B
create(This, Parent, Option::[Option]) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
Parent = wxWindow() (see module wxWindow)
.br
Option = {id, integer()} | {pos, {X::integer(), Y::integer()}} | {size, {W::integer(), H::integer()}} | {style, integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
deletePage(This, Page) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
Page = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getArtProvider(This) -> wxAuiTabArt() (see module wxAuiTabArt)
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPage(This, Page_idx) -> wxWindow() (see module wxWindow)
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
Page_idx = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPageBitmap(This, Page_idx) -> wxBitmap() (see module wxBitmap)
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
Page_idx = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPageCount(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPageIndex(This, Page_wnd) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
Page_wnd = wxWindow() (see module wxWindow)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPageText(This, Page_idx) -> charlist() (see module unicode)
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
Page_idx = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getSelection(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
insertPage(This, Page_idx, Page, Caption) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
Page_idx = integer()
.br
Page = wxWindow() (see module wxWindow)
.br
Caption = chardata() (see module unicode)
.br
.RE
.RE
.RS
.LP
Equivalent to \fBinsertPage(This, Page_idx, Page, Caption, [])\fR\&\&.
.RE
.LP
.B
insertPage(This, Page_idx, Page, Caption, Option::[Option]) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
Page_idx = integer()
.br
Page = wxWindow() (see module wxWindow)
.br
Caption = chardata() (see module unicode)
.br
Option = {select, boolean()} | {bitmap, wxBitmap() (see module wxBitmap)}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
removePage(This, Page) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
Page = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setArtProvider(This, Art) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
Art = wxAuiTabArt() (see module wxAuiTabArt)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setFont(This, Font) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
Font = wxFont() (see module wxFont)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setPageBitmap(This, Page, Bitmap) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
Page = integer()
.br
Bitmap = wxBitmap() (see module wxBitmap)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setPageText(This, Page, Text) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
Page = integer()
.br
Text = chardata() (see module unicode)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setSelection(This, New_page) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
New_page = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setTabCtrlHeight(This, Height) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
Height = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setUniformBitmapSize(This, Size) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxAuiNotebook()
.br
Size = {W::integer(), H::integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
destroy(This::wxAuiNotebook()) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>