.TH percept_profile 3 "percept 0.8.9" "" "Erlang Module Definition"
.SH NAME
percept_profile \- Percept Collector.
.SH DESCRIPTION
.LP
Percept Collector
.LP
This module provides the user interface for the percept data collection (profiling)\&.
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIpercept_option() = procs | ports | exclusive\fR\&:

.RE
.SH EXPORTS
.LP
.B
start(Filename::string()) -> {ok, Port} | {already_started, Port}
.br
.RS
.LP
Equivalent to \fBstart(Filename, [procs])\fR\&\&.
.RE
.LP
.B
start(Filename::string(), Options::[percept_option()]) -> {ok, Port} | {already_started, Port}
.br
.RS
.LP
Types:

.RS 3
Port = port()
.br
.RE
.RE
.RS
.LP
Starts profiling with supplied options\&. All events are stored in the file given by Filename\&. An explicit call to stop/0 is needed to stop profiling\&.
.RE
.LP
.B
start(Filename::string(), MFA::mfa(), Options::[percept_option()]) -> ok | {already_started, Port} | {error, not_started}
.br
.RS
.LP
Types:

.RS 3
Port = port()
.br
.RE
.RE
.RS
.LP
Starts profiling at the entrypoint specified by the MFA\&. All events are collected, this means that processes outside the scope of the entry-point are also profiled\&. No explicit call to stop/0 is needed, the profiling stops when the entry function returns\&.
.RE
.LP
.B
stop() -> ok | {error, not_started}
.br
.RS
.LP
Stops profiling\&.
.RE
.SH AUTHORS
.LP

.I
<>