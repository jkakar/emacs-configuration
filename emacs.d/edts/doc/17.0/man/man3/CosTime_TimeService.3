.TH CosTime_TimeService 3 "cosTime 1.1.14" "Ericsson AB" "Erlang Module Definition"
.SH NAME
CosTime_TimeService \- This module implements the OMG CosTime::TimeService interface.
.SH DESCRIPTION
.LP
To get access to the record definitions for the structures use: 
.br
\fI-include_lib("cosTime/include/*\&.hrl")\&.\fR\&
.SH EXPORTS
.LP
.B
universal_time(TimeService) -> Reply
.br
.RS
.LP
Types:

.RS 3
TimeService = #objref
.br
Reply = UTO | {\&'EXCEPTION", #\&'TimerService_TimeUnavailable\&'{}}
.br
UTO = #objref
.br
.RE
.RE
.RS
.LP
This operation returns the current time and the Inaccuracy given when starting this application in a UTO\&. The time base is \fI15 october 1582 00:00\fR\&\&. Comparing two time objects which use different time base is, by obvious reasons, pointless\&.
.RE
.LP
.B
new_universal_time(TimeService, Time, Inaccuracy, Tdf) -> UTO
.br
.RS
.LP
Types:

.RS 3
TimeService = UTO = #objref
.br
Time = Inaccuracy = ulonglong()
.br
Tdf = short()
.br
.RE
.RE
.RS
.LP
This operation creates a new UTO object representing the time parameters given\&. This is the only way to create a UTO with an arbitrary time from its components\&. This is useful when using the Timer Event Service\&.
.RE
.LP
.B
uto_from_utc(TimeService, Utc) -> UTO
.br
.RS
.LP
Types:

.RS 3
TimeService = UTO = #objref
.br
Utc = #\&'TimeBase_UtcT\&'{time, inacclo, inacchi, tdf}
.br
time = ulonglong()
.br
inacclo = ulong()
.br
inacchi = ushort()
.br
tdf = short()
.br
.RE
.RE
.RS
.LP
This operation is used to create a UTO given a time in the Utc form\&.
.RE
.LP
.B
new_interval(TimeService, Lower, Upper) -> TIO
.br
.RS
.LP
Types:

.RS 3
TimeService = TIO = #objref
.br
Lower = Upper = ulonglong()
.br
.RE
.RE
.RS
.LP
This operation is used to create a new TIO object, representing the input parameters\&. If \fILower\fR\& is greater than Upper BAD_PARAM is raised\&.
.RE