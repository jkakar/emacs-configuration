.TH wxHtmlWindow 3 "wx 1.2" "" "Erlang Module Definition"
.SH NAME
wxHtmlWindow \- See external documentation: wxHtmlWindow.
.SH DESCRIPTION
.LP
See external documentation: wxHtmlWindow\&.
.LP
This class is derived (and can use functions) from: 
.br
\fBwxScrolledWindow\fR\& 
.br
\fBwxPanel\fR\& 
.br
\fBwxWindow\fR\& 
.br
\fBwxEvtHandler\fR\& 
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIwxHtmlWindow()\fR\&:

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new() -> wxHtmlWindow()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
new(Parent) -> wxHtmlWindow()
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow() (see module wxWindow)
.br
.RE
.RE
.RS
.LP
Equivalent to \fBnew(Parent, [])\fR\&\&.
.RE
.LP
.B
new(Parent, Option::[Option]) -> wxHtmlWindow()
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow() (see module wxWindow)
.br
Option = {id, integer()} | {pos, {X::integer(), Y::integer()}} | {size, {W::integer(), H::integer()}} | {style, integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
appendToPage(This, Source) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
Source = chardata() (see module unicode)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getOpenedAnchor(This) -> charlist() (see module unicode)
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getOpenedPage(This) -> charlist() (see module unicode)
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getOpenedPageTitle(This) -> charlist() (see module unicode)
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getRelatedFrame(This) -> wxFrame() (see module wxFrame)
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
historyBack(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
historyCanBack(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
historyCanForward(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
historyClear(This) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
historyForward(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
loadFile(This, Filename) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
Filename = chardata() (see module unicode)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
loadPage(This, Location) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
Location = chardata() (see module unicode)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
selectAll(This) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
selectionToText(This) -> charlist() (see module unicode)
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
selectLine(This, Pos) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
Pos = {X::integer(), Y::integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
selectWord(This, Pos) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
Pos = {X::integer(), Y::integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setBorders(This, B) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
B = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setFonts(This, Normal_face, Fixed_face) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
Normal_face = chardata() (see module unicode)
.br
Fixed_face = chardata() (see module unicode)
.br
.RE
.RE
.RS
.LP
Equivalent to \fBsetFonts(This, Normal_face, Fixed_face, [])\fR\&\&.
.RE
.LP
.B
setFonts(This, Normal_face, Fixed_face, Option::[Option]) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
Normal_face = chardata() (see module unicode)
.br
Fixed_face = chardata() (see module unicode)
.br
Option = {sizes, integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setPage(This, Source) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
Source = chardata() (see module unicode)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setRelatedFrame(This, Frame, Format) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
Frame = wxFrame() (see module wxFrame)
.br
Format = chardata() (see module unicode)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setRelatedStatusBar(This, Bar) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
Bar = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
toText(This) -> charlist() (see module unicode)
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlWindow()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
destroy(This::wxHtmlWindow()) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>