.TH CosTime_UTO 3 "cosTime 1.1.14" "Ericsson AB" "Erlang Module Definition"
.SH NAME
CosTime_UTO \- This module implements the OMG CosTime::UTO interface.
.SH DESCRIPTION
.LP
To get access to the record definitions for the structures use: 
.br
\fI-include_lib("cosTime/include/*\&.hrl")\&.\fR\&
.SH EXPORTS
.LP
.B
\&'_get_time\&'(UTO) -> ulonglong()
.br
.RS
.LP
Types:

.RS 3
UTO = #objref
.br
.RE
.RE
.RS
.LP
This operation returns the time associated with the target object\&.
.RE
.LP
.B
\&'_get_inaccuracy\&'(UTO) -> ulonglong()
.br
.RS
.LP
Types:

.RS 3
UTO = #objref
.br
.RE
.RE
.RS
.LP
This operation returns the inaccuracy associated with the target object\&.
.RE
.LP
.B
\&'_get_tdf\&'(UTO) -> short()
.br
.RS
.LP
Types:

.RS 3
UTO = #objref
.br
.RE
.RE
.RS
.LP
This operation returns the time displacement factor associated with the target object\&.
.RE
.LP
.B
\&'_get_utc_time\&'(UTO) -> UtcT
.br
.RS
.LP
Types:

.RS 3
UTO = #objref
.br
Utc = #\&'TimeBase_UtcT\&'{time, inacclo, inacchi, tdf}
.br
time = ulonglong()
.br
inacclo = ulong()
.br
inacchi = ushort()
.br
tdf = short()
.br
.RE
.RE
.RS
.LP
This operation returns the data associated with the target object in Utc form\&.
.RE
.LP
.B
absolute_time(UTO) -> OtherUTO
.br
.RS
.LP
Types:

.RS 3
UTO = OtherUTO = #objref
.br
.RE
.RE
.RS
.LP
This operation create a new UTO object representing the time in the target object added to current time (UTC)\&. The time base is \fI15 october 1582 00:00\fR\&\&. Comparing two time objects which use different time base is, by obvious reasons, pointless\&. Raises DATA_CONVERSION if causes an overflow\&. This operation is only useful if the target object represents a relative time\&.
.RE
.LP
.B
compare_time(UTO, ComparisonType, OtherUTO) -> Reply
.br
.RS
.LP
Types:

.RS 3
UTO = OtherUTO = #objref
.br
ComparisonType = \&'IntervalC\&' | \&'MidC\&'
.br
Reply = \&'TCEqualTo\&' | \&'TCLessThan\&' | \&'TCGreaterThan\&' | \&'TCIndeterminate\&'
.br
.RE
.RE
.RS
.LP
This operation compares the time associated with the target object and the given UTO object\&. The different \fIComparisonType\fR\& are:
.LP

.RS 2
.TP 2
*
\&'MidC\&' - only compare the time represented by each object\&. Furthermore, the target object is always used as the first parameter in the comparison, i\&.e\&., if the target object\&'s time is larger \&'TCGreaterThan\&' will be returned\&.
.LP
.TP 2
*
\&'IntervalC\&' - also takes the inaccuracy into consideration, i\&.e\&., if the two objects interval overlaps \&'TCIndeterminate\&' is returned, otherwise the as for \&'MidC\&'\&.
.LP
.RE

.RE
.LP
.B
time_to_interval(UTO, OtherUTO) -> TIO
.br
.RS
.LP
Types:

.RS 3
UTO = OtherUTO = TIO = #objref
.br
.RE
.RE
.RS
.LP
This operation returns a TIO representing the interval between the target object and the given UTO midpoint times\&. The inaccuracy in the objects are not taken into consideration\&.
.RE
.LP
.B
interval(UTO) -> TIO
.br
.RS
.LP
Types:

.RS 3
UTO = TIO = #objref
.br
.RE
.RE
.RS
.LP
This operation creates a TIO object representing the error interval around the time value represented by the target object, i\&.e\&., \fITIO\&.upper_bound = UTO\&.time+UTO\&.inaccuracy\fR\& and \fITIO\&.lower_bound = UTO\&.time-UTO\&.inaccuracy\fR\&\&.
.RE