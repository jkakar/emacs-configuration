.TH wxToolbook 3 "wx 1.2" "" "Erlang Module Definition"
.SH NAME
wxToolbook \- See external documentation: wxToolbook.
.SH DESCRIPTION
.LP
See external documentation: wxToolbook\&.
.LP
This class is derived (and can use functions) from: 
.br
\fBwxControl\fR\& 
.br
\fBwxWindow\fR\& 
.br
\fBwxEvtHandler\fR\& 
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIwxToolbook()\fR\&:

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new() -> wxToolbook()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
new(Parent, Id) -> wxToolbook()
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow() (see module wxWindow)
.br
Id = integer()
.br
.RE
.RE
.RS
.LP
Equivalent to \fBnew(Parent, Id, [])\fR\&\&.
.RE
.LP
.B
new(Parent, Id, Option::[Option]) -> wxToolbook()
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow() (see module wxWindow)
.br
Id = integer()
.br
Option = {pos, {X::integer(), Y::integer()}} | {size, {W::integer(), H::integer()}} | {style, integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
addPage(This, Page, Text) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
Page = wxWindow() (see module wxWindow)
.br
Text = chardata() (see module unicode)
.br
.RE
.RE
.RS
.LP
Equivalent to \fBaddPage(This, Page, Text, [])\fR\&\&.
.RE
.LP
.B
addPage(This, Page, Text, Option::[Option]) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
Page = wxWindow() (see module wxWindow)
.br
Text = chardata() (see module unicode)
.br
Option = {bSelect, boolean()} | {imageId, integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
advanceSelection(This) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
.RE
.RE
.RS
.LP
Equivalent to \fBadvanceSelection(This, [])\fR\&\&.
.RE
.LP
.B
advanceSelection(This, Option::[Option]) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
Option = {forward, boolean()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
assignImageList(This, ImageList) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
ImageList = wxImageList() (see module wxImageList)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
create(This, Parent, Id) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
Parent = wxWindow() (see module wxWindow)
.br
Id = integer()
.br
.RE
.RE
.RS
.LP
Equivalent to \fBcreate(This, Parent, Id, [])\fR\&\&.
.RE
.LP
.B
create(This, Parent, Id, Option::[Option]) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
Parent = wxWindow() (see module wxWindow)
.br
Id = integer()
.br
Option = {pos, {X::integer(), Y::integer()}} | {size, {W::integer(), H::integer()}} | {style, integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
deleteAllPages(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
deletePage(This, N) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
N = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
removePage(This, N) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
N = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getCurrentPage(This) -> wxWindow() (see module wxWindow)
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getImageList(This) -> wxImageList() (see module wxImageList)
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPage(This, N) -> wxWindow() (see module wxWindow)
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
N = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPageCount(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPageImage(This, N) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
N = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPageText(This, N) -> charlist() (see module unicode)
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
N = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getSelection(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
hitTest(This, Pt) -> Result
.br
.RS
.LP
Types:

.RS 3
Result = {Res::integer(), Flags::integer()}
.br
This = wxToolbook()
.br
Pt = {X::integer(), Y::integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
insertPage(This, N, Page, Text) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
N = integer()
.br
Page = wxWindow() (see module wxWindow)
.br
Text = chardata() (see module unicode)
.br
.RE
.RE
.RS
.LP
Equivalent to \fBinsertPage(This, N, Page, Text, [])\fR\&\&.
.RE
.LP
.B
insertPage(This, N, Page, Text, Option::[Option]) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
N = integer()
.br
Page = wxWindow() (see module wxWindow)
.br
Text = chardata() (see module unicode)
.br
Option = {bSelect, boolean()} | {imageId, integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setImageList(This, ImageList) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
ImageList = wxImageList() (see module wxImageList)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setPageSize(This, Size) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
Size = {W::integer(), H::integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setPageImage(This, N, ImageId) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
N = integer()
.br
ImageId = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setPageText(This, N, StrText) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
N = integer()
.br
StrText = chardata() (see module unicode)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setSelection(This, N) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
N = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
changeSelection(This, N) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxToolbook()
.br
N = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
destroy(This::wxToolbook()) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>