.TH CosEventChannelAdmin 3 "cosEvent 2.1.15" "Ericsson AB" "Erlang Module Definition"
.SH NAME
CosEventChannelAdmin \- The CosEventChannelAdmin defines a set if event service interfaces that  enables decoupled asynchronous communication between objects and implements generic (untyped) version of the OMG COSS standard event service.
.SH DESCRIPTION
.LP
The event service defines two roles for objects: the supplier role and the consumer role\&. Suppliers supply event data to the event channel and consumers receive event data from the channel\&. Suppliers do not need to know the identity of the consumers, and vice versa\&. Consumers and suppliers are connected to the event channel via proxies, which are managed by ConsumerAdmin and SupplierAdmin objects\&.
.LP
There are four general models of communication\&. These are:
.RS 2
.TP 2
*
The canonical push model\&. It allows the suppliers of events to initiate the transfer of event data to consumers\&. Event channels play the role of \fINotifier\fR\&\&. Active suppliers use event channel to push data to passive consumers registered with the event channel\&.
.LP
.TP 2
*
The canonical pull model\&. It allows consumers to request events from suppliers\&. Event channels play the role of \fIProcure\fR\& since they procure events on behalf of consumers\&. Active consumers can explicitly pull data from passive suppliers via the event channels\&.
.LP
.TP 2
*
The hybrid push/pull model\&. It allows consumers request events queued at a channel by suppliers\&. Event channels play the role of \fIQueue\fR\&\&. Active consumers explicitly pull data deposited by active suppliers via the event channels\&.
.LP
.TP 2
*
The hybrid pull/push model\&. It allows the channel to pull events from suppliers and push them to consumers\&. Event channels play the role of \fIIntelligent agent\fR\&\&. Active event channels can pull data from passive suppliers to push it to passive consumers\&.
.LP
.RE

.LP
To get access to all definitions, e\&.g\&., exceptions, include necessary \fIhrl\fR\& files by using:
.br
\fI-include_lib("cosEvent/include/*\&.hrl")\&.\fR\&
.LP
There are seven different interfaces supported in the service:
.RS 2
.TP 2
*
ProxyPushConsumer
.LP
.TP 2
*
ProxyPullSupplier
.LP
.TP 2
*
ProxyPullConsumer
.LP
.TP 2
*
ProxyPushSupplier
.LP
.TP 2
*
ConsumerAdmin
.LP
.TP 2
*
SupplierAdmin
.LP
.TP 2
*
EventChannel
.LP
.RE
