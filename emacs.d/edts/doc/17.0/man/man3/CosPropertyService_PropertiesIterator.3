.TH CosPropertyService_PropertiesIterator 3 "cosProperty 1.1.17" "Ericsson AB" "Erlang Module Definition"
.SH NAME
CosPropertyService_PropertiesIterator \- This module implements the OMG CosPropertyService::PropertiesIterator interface.
.SH DESCRIPTION
.LP
To get access to the record definitions for the structures use: 
.br
\fI-include_lib("cosProperty/include/CosPropertyService\&.hrl")\&.\fR\&
.SH EXPORTS
.LP
.B
reset(Iterator) -> ok
.br
.RS
.LP
Types:

.RS 3
Iterator = #objref
.br
.RE
.RE
.RS
.LP
This operation resets the position to the first property\&.
.RE
.LP
.B
next_one(Iterator) -> Reply
.br
.RS
.LP
Types:

.RS 3
Iterator = #objref
.br
Reply = {boolean(), #\&'CosPropertyService_Property\&'{property_name = Name, property_value = Value}}
.br
Name = string()
.br
Value = #any
.br
.RE
.RE
.RS
.LP
This operation returns true \&. If false is returned the out parameter is a non-valid Property\&.
.RE
.LP
.B
next_n(Iterator, HowMany) -> Reply
.br
.RS
.LP
Types:

.RS 3
Iterator = #objref
.br
HowMany = long()
.br
Reply = {boolean(), Properties}
.br
Properties = [#\&'CosPropertyService_Property\&'{property_name = Name, property_value = Value}]
.br
Name = string()
.br
Value = #any
.br
.RE
.RE
.RS
.LP
This operation returns true if the requested number of properties can be delivered and there are additional properties\&. If false is returned and a sequence of max \fIHowMany\fR\& properties will be returned and no more properties can be delivered\&.
.RE
.LP
.B
destroy(Iterator) -> ok
.br
.RS
.LP
Types:

.RS 3
Iterator = #objref
.br
.RE
.RE
.RS
.LP
This operation will terminate the Iterator and all subsequent calls will fail\&.
.RE