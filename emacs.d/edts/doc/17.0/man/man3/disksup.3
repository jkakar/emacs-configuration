.TH disksup 3 "os_mon 2.2.15" "Ericsson AB" "Erlang Module Definition"
.SH NAME
disksup \- A Disk Supervisor Process
.SH DESCRIPTION
.LP
\fIdisksup\fR\& is a process which supervises the available disk space in the system\&. It is part of the OS_Mon application, see \fBos_mon(6)\fR\&\&. Available for Unix and Windows\&.
.LP
Periodically checks the disks\&. For each disk or partition which uses more than a certain amount of the available space, the alarm \fI{{disk_almost_full, MountedOn}, []}\fR\& is set\&.
.RS 2
.TP 2
.B
On Unix:
All (locally) mounted disks are checked, including the swap disk if it is present\&.
.TP 2
.B
On WIN32:
All logical drives of type "FIXED_DISK" are checked\&.
.RE
.LP
Alarms are reported to the SASL alarm handler, see \fBalarm_handler(3)\fR\&\&. To set an alarm, \fIalarm_handler:set_alarm(Alarm)\fR\& is called where \fIAlarm\fR\& is the alarm specified above\&.
.LP
The alarms are cleared automatically when the alarm cause is no longer valid\&.
.SH "CONFIGURATION"

.LP
The following configuration parameters can be used to change the default values for time interval and threshold:
.RS 2
.TP 2
.B
\fIdisk_space_check_interval = int()>0\fR\&:
The time interval, in minutes, for the periodic disk space check\&. The default is 30 minutes\&.
.TP 2
.B
\fIdisk_almost_full_threshold = float()\fR\&:
The threshold, as percentage of total disk space, for how much disk can be utilized before the \fIdisk_almost_full\fR\& alarm is set\&. The default is 0\&.80 (80%)\&.
.RE
.LP
See \fBconfig(4)\fR\& for information about how to change the value of configuration parameters\&.
.SH EXPORTS
.LP
.B
get_disk_data() -> [DiskData]
.br
.RS
.LP
Types:

.RS 3
DiskData = {Id, KByte, Capacity}
.br
 Id = string()
.br
 KByte = int()
.br
 Capacity = int()
.br
.RE
.RE
.RS
.LP
Returns the result of the latest disk check\&. \fIId\fR\& is a string that identifies the disk or partition\&. \fIKByte\fR\& is the total size of the disk or partition in kbytes\&. \fICapacity\fR\& is the percentage of disk space used\&.
.LP
The function is asynchronous in the sense that it does not invoke a disk check, but returns the latest available value\&.
.LP
Returns \fI[{"none",0,0}]\fR\& if \fIdisksup\fR\& is not available\&.
.RE
.LP
.B
get_check_interval() -> MS
.br
.RS
.LP
Types:

.RS 3
MS = int()
.br
.RE
.RE
.RS
.LP
Returns the time interval, in milliseconds, for the periodic disk space check\&.
.RE
.LP
.B
set_check_interval(Minutes) -> ok
.br
.RS
.LP
Types:

.RS 3
Minutes = int()>=1
.br
.RE
.RE
.RS
.LP
Changes the time interval, given in minutes, for the periodic disk space check\&.
.LP
The change will take effect after the next disk space check and is non-persist\&. That is, in case of a process restart, this value is forgotten and the default value will be used\&. See \fBConfiguration\fR\& above\&.
.RE
.LP
.B
get_almost_full_threshold() -> Percent
.br
.RS
.LP
Types:

.RS 3
Percent = int()
.br
.RE
.RE
.RS
.LP
Returns the threshold, in percent, for disk space utilization\&.
.RE
.LP
.B
set_almost_full_threshold(Float) -> ok
.br
.RS
.LP
Types:

.RS 3
Float = float(), 0=<Float=<1
.br
.RE
.RE
.RS
.LP
Changes the threshold, given as a float, for disk space utilization\&.
.LP
The change will take effect during the next disk space check and is non-persist\&. That is, in case of a process restart, this value is forgotten and the default value will be used\&. See \fBConfiguration\fR\& above\&.
.RE
.SH "SEE ALSO"

.LP
\fBalarm_handler(3)\fR\&, \fBos_mon(3)\fR\&