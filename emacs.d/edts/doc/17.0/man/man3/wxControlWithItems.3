.TH wxControlWithItems 3 "wx 1.2" "" "Erlang Module Definition"
.SH NAME
wxControlWithItems \- See external documentation: wxControlWithItems.
.SH DESCRIPTION
.LP
See external documentation: wxControlWithItems\&.
.LP
This class is derived (and can use functions) from: 
.br
\fBwxControl\fR\& 
.br
\fBwxWindow\fR\& 
.br
\fBwxEvtHandler\fR\& 
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIwxControlWithItems()\fR\&:

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
append(This, Item) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxControlWithItems()
.br
Item = chardata() (see module unicode)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
append(This, Item, ClientData) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxControlWithItems()
.br
Item = chardata() (see module unicode)
.br
ClientData = term()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
appendStrings(This, Strings) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxControlWithItems()
.br
Strings = [chardata() (see module unicode)]
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
clear(This) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxControlWithItems()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
delete(This, N) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxControlWithItems()
.br
N = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
findString(This, S) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxControlWithItems()
.br
S = chardata() (see module unicode)
.br
.RE
.RE
.RS
.LP
Equivalent to \fBfindString(This, S, [])\fR\&\&.
.RE
.LP
.B
findString(This, S, Option::[Option]) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxControlWithItems()
.br
S = chardata() (see module unicode)
.br
Option = {bCase, boolean()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getClientData(This, N) -> term()
.br
.RS
.LP
Types:

.RS 3
This = wxControlWithItems()
.br
N = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setClientData(This, N, ClientData) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxControlWithItems()
.br
N = integer()
.br
ClientData = term()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getCount(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxControlWithItems()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getSelection(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxControlWithItems()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getString(This, N) -> charlist() (see module unicode)
.br
.RS
.LP
Types:

.RS 3
This = wxControlWithItems()
.br
N = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getStringSelection(This) -> charlist() (see module unicode)
.br
.RS
.LP
Types:

.RS 3
This = wxControlWithItems()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
insert(This, Item, Pos) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxControlWithItems()
.br
Item = chardata() (see module unicode)
.br
Pos = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
insert(This, Item, Pos, ClientData) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxControlWithItems()
.br
Item = chardata() (see module unicode)
.br
Pos = integer()
.br
ClientData = term()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isEmpty(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxControlWithItems()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
select(This, N) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxControlWithItems()
.br
N = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setSelection(This, N) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxControlWithItems()
.br
N = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setString(This, N, S) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxControlWithItems()
.br
N = integer()
.br
S = chardata() (see module unicode)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setStringSelection(This, S) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxControlWithItems()
.br
S = chardata() (see module unicode)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.SH AUTHORS
.LP

.I
<>