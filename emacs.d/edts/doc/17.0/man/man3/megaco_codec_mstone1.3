.TH megaco_codec_mstone1 3 "megaco 3.17.1" "Ericsson AB" "Erlang Module Definition"
.SH NAME
megaco_codec_mstone1 \- This module implements a simple megaco codec-based performance tool.
.SH DESCRIPTION
.LP
This module implements the \fImstone1\fR\& tool, a simple megaco codec-based performance tool\&.
.LP
The results, the mstone value(s), are written to stdout\&.
.LP
\fINote\fR\& that this module is \fInot\fR\& included in the runtime part of the application\&.
.SH EXPORTS
.LP
.B
start() -> void()
.br
.B
start(MessagePackage) -> void()
.br
.B
start(MessagePackage, Factor) -> void()
.br
.RS
.LP
Types:

.RS 3
MessagePackage = message_package()
.br
message_package() = atom()
.br
Factor() = integer() > 0
.br
.RE
.RE
.RS
.LP
This function starts the \fImstone1\fR\& performance test with all codec configs\&. \fIFactor\fR\& (defaults to \fI1\fR\&) processes are started for every supported codec config\&.
.LP
Each process encodes and decodes their messages\&. The number of messages processed in total (for all processes) is the mstone value\&.
.RE
.LP
.B
start_flex() -> void()
.br
.B
start_flex(MessagePackage) -> void()
.br
.B
start_flex(MessagePackage, Factor) -> void()
.br
.RS
.LP
Types:

.RS 3
MessagePackage = message_package()
.br
message_package() = atom()
.br
Factor() = integer() > 0
.br
.RE
.RE
.RS
.LP
This function starts the \fImstone1\fR\& performance test with only the flex codec configs (i\&.e\&. \fIpretty\fR\& and \fIcompact\fR\& with \fIflex\fR\&)\&. The same number of processes are started as when running the standard test (using the \fIstart/0,1\fR\& function)\&. Each process encodes and decodes their messages\&. The number of messages processed in total (for all processes) is the mstone value\&.
.RE
.LP
.B
start_only_drv() -> void()
.br
.B
start_only_drv(MessagePackage) -> void()
.br
.B
start_only_drv(MessagePackage, Factor) -> void()
.br
.RS
.LP
Types:

.RS 3
MessagePackage = message_package()
.br
message_package() = atom()
.br
Factor() = integer() > 0
.br
.RE
.RE
.RS
.LP
This function starts the \fImstone1\fR\& performance test with only the driver using codec configs (i\&.e\&. \fIpretty\fR\& and \fIcompact\fR\& with \fIflex\fR\&, and \fIber\fR\& and \fIper\fR\& with \fIdriver\fR\& and \fIerlang\fR\& with \fIcompressed\fR\&)\&. The same number of processes are started as when running the standard test (using the \fIstart/0,1\fR\& function)\&. Each process encodes and decodes their messages\&. The number of messages processed in total (for all processes) is the mstone value\&.
.RE
.LP
.B
start_no_drv() -> void()
.br
.B
start_no_drv(MessagePackage) -> void()
.br
.B
start_no_drv(MessagePackage, Factor) -> void()
.br
.RS
.LP
Types:

.RS 3
MessagePackage = message_package()
.br
message_package() = atom()
.br
Factor() = integer() > 0
.br
.RE
.RE
.RS
.LP
This function starts the \fImstone1\fR\& performance test with codec configs not using any drivers (i\&.e\&. \fIpretty\fR\& and \fIcompact\fR\& without \fIflex\fR\&, \fIber\fR\& and \fIper\fR\& without \fIdriver\fR\& and \fIerlang\fR\& without \fIcompressed\fR\&)\&. The same number of processes are started as when running the standard test (using the \fIstart/0,1\fR\& function)\&. Each process encodes and decodes their messages\&. The number of messages processed in total (for all processes) is the mstone value\&.
.RE