.TH CosFileTransfer_FileIterator 3 "cosFileTransfer 1.1.16" "Ericsson AB" "Erlang Module Definition"
.SH NAME
CosFileTransfer_FileIterator \- This module implements the OMG CosFileTransfer::FileIterator interface.
.SH DESCRIPTION
.LP
To get access to the record definitions for the structures use: 
.br
\fI-include_lib("cosFileTransfer/include/*\&.hrl")\&.\fR\&
.SH EXPORTS
.LP
.B
next_one(Iterator) -> Return
.br
.RS
.LP
Types:

.RS 3
Iterator = #objref
.br
Return = {boolean(), #\&'CosFileTransfer_FileWrapper\&'{the_file = File file_type = Type}}
.br
File = #objref
.br
Type = nfile | ndirectory
.br
.RE
.RE
.RS
.LP
This operation returns true if a \fIFileWrapper\fR\& exists at the current position and the out parameter contains a valid \fIFile\fR\& reference\&. If false is returned the out parameter is a non-valid \fIFileWrapper\fR\&\&.
.RE
.LP
.B
next_n(Iterator, Max) -> Return
.br
.RS
.LP
Types:

.RS 3
Iterator = #objref
.br
Max = unsigned long()
.br
Return = {boolean(), FileList}
.br
FileList = [#\&'CosFileTransfer_FileWrapper\&'{the_file = File file_type = Type}]
.br
File = #objref
.br
Type = nfile | ndirectory
.br
.RE
.RE
.RS
.LP
This operation returns true if the requested number of \fIFileWrappers\fR\& can be delivered and there are additional \fIFileWrappers\fR\&\&. If false is returned a list, of length \fIMax\fR\& or less, containing the last valid \fIFileWrappers\fR\& associated with the target object\&.
.RE
.LP
.B
destroy(Iterator) -> ok
.br
.RS
.LP
Types:

.RS 3
Iterator = #objref
.br
.RE
.RE
.RS
.LP
This operation terminates the target object\&.
.RE