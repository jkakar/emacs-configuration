.TH CosEventChannelAdmin_EventChannel 3 "cosEvent 2.1.15" "Ericsson AB" "Erlang Module Definition"
.SH NAME
CosEventChannelAdmin_EventChannel \- This module implements an Event Channel interface, which plays the role of a  mediator between consumers and suppliers.
.SH DESCRIPTION
.LP
An event channel is an object that allows multiple suppliers to communicate with multiple consumers in a highly decoupled, asynchronous manner\&. The event channel is built up incrementally\&. When an event channel is created no suppliers or consumers are connected to it\&. Event Channel can implement group communication by serving as a replicator, broadcaster, or multicaster that forward events from one or more suppliers to multiple consumers\&.
.LP
It is up to the user to decide when an event channel is created and how references to the event channel are obtained\&. By representing the event channel as an object, it has all of the properties that apply to objects\&. One way to manage an event channel is to register it in a naming context, or export it through an operation on an object\&.
.LP
To get access to all definitions include necessary \fIhrl\fR\& files by using:
.br
\fI-include_lib("cosEvent/include/*\&.hrl")\&.\fR\&
.LP
Any object that possesses an object reference that supports the ProxyPullConsumer interface can perform the following operations:
.SH EXPORTS
.LP
.B
for_consumers(Object) -> Return
.br
.RS
.LP
Types:

.RS 3
Object = #objref
.br
Return = #objref
.br
.RE
.RE
.RS
.LP
This operation returns a ConsumerAdmin object reference\&. If ConsumerAdmin object does not exist already it creates one\&.
.RE
.LP
.B
for_suppliers(Object) -> Return
.br
.RS
.LP
Types:

.RS 3
Object = #objref
.br
Return = #objref
.br
.RE
.RE
.RS
.LP
This operation returns a SupplierAdmin object reference\&. If SupplierAdmin object does not exist already it creates one\&.
.RE
.LP
.B
destroy(Object) -> Return
.br
.RS
.LP
Types:

.RS 3
Object = #objref
.br
Return = #objref
.br
.RE
.RE
.RS
.LP

.RE