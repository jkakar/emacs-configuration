.TH CosNotifyChannelAdmin_ProxyPushSupplier 3 "cosNotification 1.1.21" "Ericsson AB" "Erlang Module Definition"
.SH NAME
CosNotifyChannelAdmin_ProxyPushSupplier \- This module implements the OMG  CosNotifyChannelAdmin::ProxyPushSupplier interface.
.SH DESCRIPTION
.LP
To get access to the record definitions for the structures use: 
.br
\fI-include_lib("cosNotification/include/*\&.hrl")\&.\fR\&
.LP
This module also exports the functions described in:
.RS 2
.TP 2
*
\fBCosNotifyComm_NotifySubscribe\fR\&
.LP
.TP 2
*
\fBCosNotification_QoSAdmin\fR\&
.LP
.TP 2
*
\fBCosNotifyFilter_FilterAdmi\fR\&
.LP
.TP 2
*
\fBCosNotifyChannelAdmin_ProxySupplier\fR\&
.LP
.RE

.SH EXPORTS
.LP
.B
connect_any_push_consumer(ProxyPushSupplier, PushConsumer) -> Reply
.br
.RS
.LP
Types:

.RS 3
ProxyPushSupplier = #objref
.br
PushConsumer = #objref
.br
Reply = ok | {\&'EXCEPTION\&', #\&'CosEventChannelAdmin_AlreadyConnected\&'{}} | {\&'EXCEPTION\&', #\&'CosEventChannelAdmin_TypeError\&'{}}
.br
.RE
.RE
.RS
.LP
This operation connects a \fIPushConsumer\fR\& to the target object\&. If a connection already exists or the given client does not support the operation \fIpush\fR\& an exception, \fIAlreadyConnected\fR\& and \fITypeError\fR\& respectively, is raised\&.
.RE
.LP
.B
suspend_connection(ProxyPushSupplier) -> Reply
.br
.RS
.LP
Types:

.RS 3
ProxyPushSupplier = #objref
.br
Reply = ok | {\&'EXCEPTION\&', #\&'CosNotifyChannelAdmin_ConnectionAlreadyInactive\&'{}} | {\&'EXCEPTION\&', #\&'CosNotifyChannelAdmin_NotConnected\&'{}}
.br
.RE
.RE
.RS
.LP
This operation suspends the connection with the client object\&. If the connection already is suspended or no client have been associated an exception is raised\&.
.RE
.LP
.B
resume_connection(ProxyPushSupplier) -> Reply
.br
.RS
.LP
Types:

.RS 3
ProxyPullConsumer = #objref
.br
Reply = ok | {\&'EXCEPTION\&', #\&'CosNotifyChannelAdmin_ConnectionAlreadyInactive\&'{}} | {\&'EXCEPTION\&', #\&'CosNotifyChannelAdmin_NotConnected\&'{}}
.br
.RE
.RE
.RS
.LP
If a connection have been suspended earlier, calling this operation will resume the connection\&. If the connection already is active or no client have been connected an exception is raised\&.
.RE
.LP
.B
disconnect_push_supplier(ProxyPushSupplier) -> ok
.br
.RS
.LP
Types:

.RS 3
ProxyPushSupplier = #objref
.br
.RE
.RE
.RS
.LP
This operation cause the target object to close the connection and terminate\&.
.RE