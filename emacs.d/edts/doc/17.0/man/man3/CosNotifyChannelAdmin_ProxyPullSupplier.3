.TH CosNotifyChannelAdmin_ProxyPullSupplier 3 "cosNotification 1.1.21" "Ericsson AB" "Erlang Module Definition"
.SH NAME
CosNotifyChannelAdmin_ProxyPullSupplier \- This module implements the OMG  CosNotifyChannelAdmin::ProxyPullSupplier interface.
.SH DESCRIPTION
.LP
To get access to the record definitions for the structures use: 
.br
\fI-include_lib("cosNotification/include/*\&.hrl")\&.\fR\&
.LP
This module also exports the functions described in:
.RS 2
.TP 2
*
\fBCosNotifyComm_NotifySubscribe\fR\&
.LP
.TP 2
*
\fBCosNotification_QoSAdmin\fR\&
.LP
.TP 2
*
\fBCosNotifyFilter_FilterAdmin\fR\&
.LP
.TP 2
*
\fBCosNotifyChannelAdmin_ProxySupplier\fR\&
.LP
.RE

.SH EXPORTS
.LP
.B
connect_any_pull_consumer(ProxyPullSupplier, PullConsumer) -> Reply
.br
.RS
.LP
Types:

.RS 3
ProxyPullSupplier = #objref
.br
PullConsumer = #objref
.br
Reply = ok | {\&'EXCEPTION\&', #\&'CosEventChannelAdmin_AlreadyConnected\&'{}}
.br
.RE
.RE
.RS
.LP
This operation connects the given \fIPullConsumer\fR\& to the target object\&. If a connection already exists the \fIAlreadyConnected\fR\& exception is raised\&.
.RE
.LP
.B
pull(ProxyPullSupplier) -> Reply
.br
.RS
.LP
Types:

.RS 3
ProxyPullSupplier = #objref
.br
Reply = #any | {\&'EXCEPTION\&', #\&'CosEventChannelAdmin_Disconnected\&'{}}
.br
.RE
.RE
.RS
.LP
This operation pulls next \fI#any{}\fR\& event, and blocks, if the target object have no events to forward, until an event can be delivered\&. If no client have been connected the \fIDisconnected\fR\& exception is raised\&.
.RE
.LP
.B
try_pull(ProxyPullSupplier) -> Reply
.br
.RS
.LP
Types:

.RS 3
ProxyPullSupplier = #objref
.br
Reply = {#any, HasEvent} | {\&'EXCEPTION\&', #\&'CosEventChannelAdmin_Disconnected\&'{}}
.br
HasEvent = boolean()
.br
.RE
.RE
.RS
.LP
This operation pulls next event, but do not block if the target object have no event to forward\&. If no client have been connected the \fIDisconnected\fR\& exception is raised\&.
.RE
.LP
.B
disconnect_pull_supplier(ProxyPullSupplier) -> ok
.br
.RS
.LP
Types:

.RS 3
ProxyPullSupplier = #objref
.br
.RE
.RE
.RS
.LP
Invoking this operation will cause the target object to close the connection and terminate\&.
.RE