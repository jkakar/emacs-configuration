.TH wxCommandEvent 3 "wx 1.2" "" "Erlang Module Definition"
.SH NAME
wxCommandEvent \- See external documentation: wxCommandEvent.
.SH DESCRIPTION
.LP
See external documentation: wxCommandEvent\&.
.RS 2
.TP 2
.B
Use \fBwxEvtHandler:connect/3\fR\& with EventType::
\fIcommand_button_clicked\fR\&, \fIcommand_checkbox_clicked\fR\&, \fIcommand_choice_selected\fR\&, \fIcommand_listbox_selected\fR\&, \fIcommand_listbox_doubleclicked\fR\&, \fIcommand_text_updated\fR\&, \fIcommand_text_enter\fR\&, \fIcommand_menu_selected\fR\&, \fIcommand_slider_updated\fR\&, \fIcommand_radiobox_selected\fR\&, \fIcommand_radiobutton_selected\fR\&, \fIcommand_scrollbar_updated\fR\&, \fIcommand_vlbox_selected\fR\&, \fIcommand_combobox_selected\fR\&, \fIcommand_tool_rclicked\fR\&, \fIcommand_tool_enter\fR\&, \fIcommand_checklistbox_toggled\fR\&, \fIcommand_togglebutton_clicked\fR\&, \fIcommand_left_click\fR\&, \fIcommand_left_dclick\fR\&, \fIcommand_right_click\fR\&, \fIcommand_set_focus\fR\&, \fIcommand_kill_focus\fR\&, \fIcommand_enter\fR\&
.RE
.LP
See also the message variant \fB#wxCommand{\fR\&} event record type\&.
.LP
This class is derived (and can use functions) from: 
.br
\fBwxEvent\fR\& 
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIwxCommandEvent()\fR\&:

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
getClientData(This) -> term()
.br
.RS
.LP
Types:

.RS 3
This = wxCommandEvent()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getExtraLong(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxCommandEvent()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getInt(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxCommandEvent()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getSelection(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxCommandEvent()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getString(This) -> charlist() (see module unicode)
.br
.RS
.LP
Types:

.RS 3
This = wxCommandEvent()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isChecked(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxCommandEvent()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isSelection(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxCommandEvent()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setInt(This, I) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxCommandEvent()
.br
I = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setString(This, S) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxCommandEvent()
.br
S = chardata() (see module unicode)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.SH AUTHORS
.LP

.I
<>