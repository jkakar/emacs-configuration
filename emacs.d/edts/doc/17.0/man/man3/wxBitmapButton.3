.TH wxBitmapButton 3 "wx 1.2" "" "Erlang Module Definition"
.SH NAME
wxBitmapButton \- See external documentation: wxBitmapButton.
.SH DESCRIPTION
.LP
See external documentation: wxBitmapButton\&.
.LP
This class is derived (and can use functions) from: 
.br
\fBwxButton\fR\& 
.br
\fBwxControl\fR\& 
.br
\fBwxWindow\fR\& 
.br
\fBwxEvtHandler\fR\& 
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIwxBitmapButton()\fR\&:

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new() -> wxBitmapButton()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
new(Parent, Id, Bitmap) -> wxBitmapButton()
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow() (see module wxWindow)
.br
Id = integer()
.br
Bitmap = wxBitmap() (see module wxBitmap)
.br
.RE
.RE
.RS
.LP
Equivalent to \fBnew(Parent, Id, Bitmap, [])\fR\&\&.
.RE
.LP
.B
new(Parent, Id, Bitmap, Option::[Option]) -> wxBitmapButton()
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow() (see module wxWindow)
.br
Id = integer()
.br
Bitmap = wxBitmap() (see module wxBitmap)
.br
Option = {pos, {X::integer(), Y::integer()}} | {size, {W::integer(), H::integer()}} | {style, integer()} | {validator, wx_object() (see module wx)}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
create(This, Parent, Id, Bitmap) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxBitmapButton()
.br
Parent = wxWindow() (see module wxWindow)
.br
Id = integer()
.br
Bitmap = wxBitmap() (see module wxBitmap)
.br
.RE
.RE
.RS
.LP
Equivalent to \fBcreate(This, Parent, Id, Bitmap, [])\fR\&\&.
.RE
.LP
.B
create(This, Parent, Id, Bitmap, Option::[Option]) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxBitmapButton()
.br
Parent = wxWindow() (see module wxWindow)
.br
Id = integer()
.br
Bitmap = wxBitmap() (see module wxBitmap)
.br
Option = {pos, {X::integer(), Y::integer()}} | {size, {W::integer(), H::integer()}} | {style, integer()} | {validator, wx_object() (see module wx)}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getBitmapDisabled(This) -> wxBitmap() (see module wxBitmap)
.br
.RS
.LP
Types:

.RS 3
This = wxBitmapButton()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getBitmapFocus(This) -> wxBitmap() (see module wxBitmap)
.br
.RS
.LP
Types:

.RS 3
This = wxBitmapButton()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getBitmapLabel(This) -> wxBitmap() (see module wxBitmap)
.br
.RS
.LP
Types:

.RS 3
This = wxBitmapButton()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getBitmapSelected(This) -> wxBitmap() (see module wxBitmap)
.br
.RS
.LP
Types:

.RS 3
This = wxBitmapButton()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setBitmapDisabled(This, Disabled) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxBitmapButton()
.br
Disabled = wxBitmap() (see module wxBitmap)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setBitmapFocus(This, Focus) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxBitmapButton()
.br
Focus = wxBitmap() (see module wxBitmap)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setBitmapLabel(This, Bitmap) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxBitmapButton()
.br
Bitmap = wxBitmap() (see module wxBitmap)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setBitmapSelected(This, Sel) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxBitmapButton()
.br
Sel = wxBitmap() (see module wxBitmap)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
destroy(This::wxBitmapButton()) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>