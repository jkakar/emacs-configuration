.TH CosTimerEvent_TimerEventHandler 3 "cosTime 1.1.14" "Ericsson AB" "Erlang Module Definition"
.SH NAME
CosTimerEvent_TimerEventHandler \- This module implements the OMG  CosTimerEvent::TimerEventHandler interface.
.SH DESCRIPTION
.LP
To get access to the record definitions for the structures use: 
.br
\fI-include_lib("cosTime/include/*\&.hrl")\&.\fR\&
.SH EXPORTS
.LP
.B
\&'_get_status\&'(TimerEventHandler) -> Reply
.br
.RS
.LP
Types:

.RS 3
TimerEventHandler = #objref
.br
Reply = \&'ESTimeSet\&' | \&'ESTimeCleared\&' | \&'ESTriggered\&' | \&'ESFailedTrigger\&'
.br
.RE
.RE
.RS
.LP
This operation returns the status of the target object\&.
.RS 2
.TP 2
*
\&'ESTimeSet\&' - timer is set to trigger event(s)\&.
.LP
.TP 2
*
\&'ESTimeCleared\&' - no time set or the timer have been reset\&.
.LP
.TP 2
*
\&'ESTriggered\&' - event has already been sent\&.
.LP
.TP 2
*
\&'ESFailedTrigger\&' - tried to, but failed, sending the event\&.
.LP
.RE

.LP
If the target object is of type \&'TTPeriodic\&' the status value \&'ESTriggered\&' is not valid\&.
.RE
.LP
.B
time_set(TimerEventHandler) -> Reply
.br
.RS
.LP
Types:

.RS 3
TimerEventHandler = #objref
.br
Reply = {boolean(), UTO}
.br
UTO = #objref
.br
.RE
.RE
.RS
.LP
This operation returns \fItrue\fR\& if the time has been set for an event that is yet to be triggered, \fIfalse\fR\& otherwise\&. The outparameter represents the current time value of the target object\&.
.RE
.LP
.B
set_timer(TimerEventHandler, TimeType, TriggerTime) -> void()
.br
.RS
.LP
Types:

.RS 3
TimerEventHandler = #objref
.br
TimeType = \&'TTAbsolute\&' | \&'TTRelative\&' | \&'TTPeriodic\&'
.br
TriggerTime = UTO
.br
UTO = #objref
.br
.RE
.RE
.RS
.LP
This operation terminates any previous set trigger, and set a new trigger specified by the \fITimeType\fR\& and \fIUTO\fR\& objects\&.
.LP
The relation between the UTO object and the TimeTypes are:
.RS 2
.TP 2
*
\&'TTAbsolute\&' - the UTO object must represent absolute time, i\&.e\&., number of 100 nanoseconds passed since 15 october 1582 00:00\&.
.LP
.TP 2
*
\&'TTRelative\&' - the UTO object must represent the from now until when the event should be triggered, e\&.g\&., within 30*10^7 nanoseconds\&.
.LP
.TP 2
*
\&'TTPeriodic\&' - the same as for \&'TTRelative\&', but this option will trigger an event periodically until timer cancelled\&.
.LP
.RE

.RE
.LP
.B
cancel_timer(TimerEventHandler) -> boolean()
.br
.RS
.LP
Types:

.RS 3
TimerEventHandler = #objref
.br
.RE
.RE
.RS
.LP
This operation cancel, if possible, the triggering of event(s)\&. Returns \fItrue\fR\& if an event is actually cancelled, \fIfalse\fR\& otherwise\&.
.RE
.LP
.B
set_data(TimerEventHandler, EventData) -> ok
.br
.RS
.LP
Types:

.RS 3
TimerEventHandler = #objref
.br
EventData = #any
.br
.RE
.RE
.RS
.LP
This operation changes the event data sent when triggered\&.
.RE