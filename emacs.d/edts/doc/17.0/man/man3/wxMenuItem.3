.TH wxMenuItem 3 "wx 1.2" "" "Erlang Module Definition"
.SH NAME
wxMenuItem \- See external documentation: wxMenuItem.
.SH DESCRIPTION
.LP
See external documentation: wxMenuItem\&.
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIwxMenuItem()\fR\&:

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new() -> wxMenuItem()
.br
.RS
.LP
Equivalent to \fBnew([])\fR\&\&.
.RE
.LP
.B
new(Option::[Option]) -> wxMenuItem()
.br
.RS
.LP
Types:

.RS 3
Option = {parentMenu, wxMenu() (see module wxMenu)} | {id, integer()} | {text, chardata() (see module unicode)} | {help, chardata() (see module unicode)} | {kind, wx_enum() (see module wx)} | {subMenu, wxMenu() (see module wxMenu)}
.br
.RE
.RE
.RS
.LP
See external documentation\&. 
.br
Kind = ?wxITEM_SEPARATOR | ?wxITEM_NORMAL | ?wxITEM_CHECK | ?wxITEM_RADIO | ?wxITEM_MAX
.RE
.LP
.B
check(This) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
.RE
.RE
.RS
.LP
Equivalent to \fBcheck(This, [])\fR\&\&.
.RE
.LP
.B
check(This, Option::[Option]) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
Option = {check, boolean()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
enable(This) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
.RE
.RE
.RS
.LP
Equivalent to \fBenable(This, [])\fR\&\&.
.RE
.LP
.B
enable(This, Option::[Option]) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
Option = {enable, boolean()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getBitmap(This) -> wxBitmap() (see module wxBitmap)
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getHelp(This) -> charlist() (see module unicode)
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getId(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getKind(This) -> wx_enum() (see module wx)
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
.RE
.RE
.RS
.LP
See external documentation\&. 
.br
Res = ?wxITEM_SEPARATOR | ?wxITEM_NORMAL | ?wxITEM_CHECK | ?wxITEM_RADIO | ?wxITEM_MAX
.RE
.LP
.B
getLabel(This) -> charlist() (see module unicode)
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getLabelFromText(Text) -> charlist() (see module unicode)
.br
.RS
.LP
Types:

.RS 3
Text = chardata() (see module unicode)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getMenu(This) -> wxMenu() (see module wxMenu)
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getText(This) -> charlist() (see module unicode)
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getSubMenu(This) -> wxMenu() (see module wxMenu)
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isCheckable(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isChecked(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isEnabled(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isSeparator(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isSubMenu(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setBitmap(This, Bitmap) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
Bitmap = wxBitmap() (see module wxBitmap)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setHelp(This, Str) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
Str = chardata() (see module unicode)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setMenu(This, Menu) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
Menu = wxMenu() (see module wxMenu)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setSubMenu(This, Menu) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
Menu = wxMenu() (see module wxMenu)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setText(This, Str) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxMenuItem()
.br
Str = chardata() (see module unicode)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
destroy(This::wxMenuItem()) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>