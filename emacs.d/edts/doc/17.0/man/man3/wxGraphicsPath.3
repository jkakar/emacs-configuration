.TH wxGraphicsPath 3 "wx 1.2" "" "Erlang Module Definition"
.SH NAME
wxGraphicsPath \- See external documentation: wxGraphicsPath.
.SH DESCRIPTION
.LP
See external documentation: wxGraphicsPath\&.
.LP
This class is derived (and can use functions) from: 
.br
\fBwxGraphicsObject\fR\& 
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIwxGraphicsPath()\fR\&:

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
moveToPoint(This, P) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
P = {X::float(), Y::float()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
moveToPoint(This, X, Y) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
X = number()
.br
Y = number()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
addArc(This, C, R, StartAngle, EndAngle, Clockwise) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
C = {X::float(), Y::float()}
.br
R = number()
.br
StartAngle = number()
.br
EndAngle = number()
.br
Clockwise = boolean()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
addArc(This, X, Y, R, StartAngle, EndAngle, Clockwise) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
X = number()
.br
Y = number()
.br
R = number()
.br
StartAngle = number()
.br
EndAngle = number()
.br
Clockwise = boolean()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
addArcToPoint(This, X1, Y1, X2, Y2, R) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
X1 = number()
.br
Y1 = number()
.br
X2 = number()
.br
Y2 = number()
.br
R = number()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
addCircle(This, X, Y, R) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
X = number()
.br
Y = number()
.br
R = number()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
addCurveToPoint(This, C1, C2, E) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
C1 = {X::float(), Y::float()}
.br
C2 = {X::float(), Y::float()}
.br
E = {X::float(), Y::float()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
addCurveToPoint(This, Cx1, Cy1, Cx2, Cy2, X, Y) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
Cx1 = number()
.br
Cy1 = number()
.br
Cx2 = number()
.br
Cy2 = number()
.br
X = number()
.br
Y = number()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
addEllipse(This, X, Y, W, H) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
X = number()
.br
Y = number()
.br
W = number()
.br
H = number()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
addLineToPoint(This, P) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
P = {X::float(), Y::float()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
addLineToPoint(This, X, Y) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
X = number()
.br
Y = number()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
addPath(This, Path) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
Path = wxGraphicsPath()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
addQuadCurveToPoint(This, Cx, Cy, X, Y) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
Cx = number()
.br
Cy = number()
.br
X = number()
.br
Y = number()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
addRectangle(This, X, Y, W, H) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
X = number()
.br
Y = number()
.br
W = number()
.br
H = number()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
addRoundedRectangle(This, X, Y, W, H, Radius) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
X = number()
.br
Y = number()
.br
W = number()
.br
H = number()
.br
Radius = number()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
closeSubpath(This) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
contains(This, C) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
C = {X::float(), Y::float()}
.br
.RE
.RE
.RS
.LP
Equivalent to \fBcontains(This, C, [])\fR\&\&.
.RE
.LP
.B
contains(This, X, Y) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
X = number()
.br
Y = number()
.br
.RE
.RE
.RS
.LP
See external documentation\&. 
.br
Also:
.br
contains(This, C, [Option]) -> boolean() when
.br
This::wxGraphicsPath(), C::{X::float(), Y::float()},
.br
Option :: {fillStyle, wx:wx_enum()}\&.
.br

.LP

.br
FillStyle = integer
.RE
.LP
.B
contains(This, X, Y, Option::[Option]) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
X = number()
.br
Y = number()
.br
Option = {fillStyle, wx_enum() (see module wx)}
.br
.RE
.RE
.RS
.LP
See external documentation\&. 
.br
FillStyle = integer
.RE
.LP
.B
getBox(This) -> {X::float(), Y::float(), W::float(), H::float()}
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getCurrentPoint(This) -> {X::float(), Y::float()}
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
transform(This, Matrix) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxGraphicsPath()
.br
Matrix = wxGraphicsMatrix() (see module wxGraphicsMatrix)
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.SH AUTHORS
.LP

.I
<>