.TH wxFlexGridSizer 3 "wx 1.2" "" "Erlang Module Definition"
.SH NAME
wxFlexGridSizer \- See external documentation: wxFlexGridSizer.
.SH DESCRIPTION
.LP
See external documentation: wxFlexGridSizer\&.
.LP
This class is derived (and can use functions) from: 
.br
\fBwxGridSizer\fR\& 
.br
\fBwxSizer\fR\& 
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIwxFlexGridSizer()\fR\&:

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new(Cols) -> wxFlexGridSizer()
.br
.RS
.LP
Types:

.RS 3
Cols = integer()
.br
.RE
.RE
.RS
.LP
Equivalent to \fBnew(Cols, [])\fR\&\&.
.RE
.LP
.B
new(Cols, Option::[Option]) -> wxFlexGridSizer()
.br
.RS
.LP
Types:

.RS 3
Cols = integer()
.br
Option = {vgap, integer()} | {hgap, integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
new(Rows, Cols, Vgap, Hgap) -> wxFlexGridSizer()
.br
.RS
.LP
Types:

.RS 3
Rows = integer()
.br
Cols = integer()
.br
Vgap = integer()
.br
Hgap = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
addGrowableCol(This, Idx) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxFlexGridSizer()
.br
Idx = integer()
.br
.RE
.RE
.RS
.LP
Equivalent to \fBaddGrowableCol(This, Idx, [])\fR\&\&.
.RE
.LP
.B
addGrowableCol(This, Idx, Option::[Option]) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxFlexGridSizer()
.br
Idx = integer()
.br
Option = {proportion, integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
addGrowableRow(This, Idx) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxFlexGridSizer()
.br
Idx = integer()
.br
.RE
.RE
.RS
.LP
Equivalent to \fBaddGrowableRow(This, Idx, [])\fR\&\&.
.RE
.LP
.B
addGrowableRow(This, Idx, Option::[Option]) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxFlexGridSizer()
.br
Idx = integer()
.br
Option = {proportion, integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getFlexibleDirection(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxFlexGridSizer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getNonFlexibleGrowMode(This) -> wx_enum() (see module wx)
.br
.RS
.LP
Types:

.RS 3
This = wxFlexGridSizer()
.br
.RE
.RE
.RS
.LP
See external documentation\&. 
.br
Res = ?wxFLEX_GROWMODE_NONE | ?wxFLEX_GROWMODE_SPECIFIED | ?wxFLEX_GROWMODE_ALL
.RE
.LP
.B
removeGrowableCol(This, Idx) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxFlexGridSizer()
.br
Idx = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
removeGrowableRow(This, Idx) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxFlexGridSizer()
.br
Idx = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setFlexibleDirection(This, Direction) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxFlexGridSizer()
.br
Direction = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setNonFlexibleGrowMode(This, Mode) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxFlexGridSizer()
.br
Mode = wx_enum() (see module wx)
.br
.RE
.RE
.RS
.LP
See external documentation\&. 
.br
Mode = ?wxFLEX_GROWMODE_NONE | ?wxFLEX_GROWMODE_SPECIFIED | ?wxFLEX_GROWMODE_ALL
.RE
.LP
.B
destroy(This::wxFlexGridSizer()) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>