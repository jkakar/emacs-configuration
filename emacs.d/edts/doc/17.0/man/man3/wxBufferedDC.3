.TH wxBufferedDC 3 "wx 1.2" "" "Erlang Module Definition"
.SH NAME
wxBufferedDC \- See external documentation: wxBufferedDC.
.SH DESCRIPTION
.LP
See external documentation: wxBufferedDC\&.
.LP
This class is derived (and can use functions) from: 
.br
\fBwxMemoryDC\fR\& 
.br
\fBwxDC\fR\& 
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIwxBufferedDC()\fR\&:

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new() -> wxBufferedDC()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
new(Dc) -> wxBufferedDC()
.br
.RS
.LP
Types:

.RS 3
Dc = wxDC() (see module wxDC)
.br
.RE
.RE
.RS
.LP
Equivalent to \fBnew(Dc, [])\fR\&\&.
.RE
.LP
.B
new(Dc, Area) -> wxBufferedDC()
.br
.RS
.LP
Types:

.RS 3
Dc = wxDC() (see module wxDC)
.br
Area = {W::integer(), H::integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&. 
.br
Also:
.br
new(Dc, [Option]) -> wxBufferedDC() when
.br
Dc::wxDC:wxDC(),
.br
Option :: {buffer, wxBitmap:wxBitmap()}
.br
| {style, integer()}\&.
.br

.RE
.LP
.B
new(Dc, Area, Option::[Option]) -> wxBufferedDC()
.br
.RS
.LP
Types:

.RS 3
Dc = wxDC() (see module wxDC)
.br
Area = {W::integer(), H::integer()}
.br
Option = {style, integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
init(This, Dc) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxBufferedDC()
.br
Dc = wxDC() (see module wxDC)
.br
.RE
.RE
.RS
.LP
Equivalent to \fBinit(This, Dc, [])\fR\&\&.
.RE
.LP
.B
init(This, Dc, Area) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxBufferedDC()
.br
Dc = wxDC() (see module wxDC)
.br
Area = {W::integer(), H::integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&. 
.br
Also:
.br
init(This, Dc, [Option]) -> ok when
.br
This::wxBufferedDC(), Dc::wxDC:wxDC(),
.br
Option :: {buffer, wxBitmap:wxBitmap()}
.br
| {style, integer()}\&.
.br

.RE
.LP
.B
init(This, Dc, Area, Option::[Option]) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxBufferedDC()
.br
Dc = wxDC() (see module wxDC)
.br
Area = {W::integer(), H::integer()}
.br
Option = {style, integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
destroy(This::wxBufferedDC()) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>